name: "Flexlate Update Action"
description: "Official Flexlate Github Action for updating templates"
inputs:
  gh_token: # id of input
    description: "Github Token"
    required: true
  main_branch_name:
    description: "Name of the main branch"
    required: true
    default: "master"
runs:
  using: "composite"
  steps:
    - name: Install Flexlate
      run: pip install flexlate
      shell: bash
    - name: Set Git Committer
      run: |
        git config --global user.email "flexlate@nickderobertis.com"
        git config --global user.name "Flexlate"
      shell: bash
    - name: Check if template is out of date
      id: template_check
      run: |
        if ! fxt check; then
          echo "Need to update template. Will do so and open PR.";
          echo ::set-output name=template_update::true;
        else
          echo "No updates to template needed, will exit workflow.";
          echo ::set-output name=template_update::false;
        fi;
      shell: bash
    - name: Set template update branch
      if: steps.template_check.outputs.template_update == 'true'
      run: git checkout -b template-patches
      shell: bash
    - name: Template Update
      id: template_update
      if: steps.template_check.outputs.template_update == 'true'
      run: |
        if fxt update --no-input --abort --no-cleanup; then
          echo "Applied updates successfully.";
          echo ::set-output name=base_branch::$MAIN_BRANCH_NAME;
          echo ::set-output name=merge_branch::template-patches;
        else
          echo "Encountered conflicts while trying to apply update. Will open a conflict resolution PR.";
          git merge --abort;
          echo "Branching off flexlate-templates-template-patches to create a temporary PR branch for conflict resolution.";
          git checkout flexlate-templates-template-patches;
          git checkout -b flexlate-templates-template-patches-for-conflicts;
          git push origin flexlate-templates-template-patches-for-conflicts;
          echo ::set-output name=base_branch::flexlate-output-template-patches;
          echo ::set-output name=merge_branch::flexlate-templates-template-patches-for-conflicts;
        fi;
      shell: bash
      env:
        MAIN_BRANCH_NAME: ${{ inputs.main_branch_name }}
    - name: Push changes to Flexlate template branch
      if: steps.template_check.outputs.template_update == 'true'
      run: git push origin flexlate-templates-template-patches
      shell: bash
    - name: Push changes to Flexlate output branch
      if: steps.template_check.outputs.template_update == 'true'
      run: git push origin flexlate-output-template-patches
      shell: bash
    - name: Push changes to feature branch
      if: steps.template_check.outputs.template_update == 'true'
      run: git push origin template-patches
      shell: bash
    - name: Checkout base branch
      if: steps.template_check.outputs.template_update == 'true'
      run: |
        git checkout "$CHECKOUT_BRANCH"
      env:
        CHECKOUT_BRANCH: ${{ steps.template_update.outputs.base_branch }}
      shell: bash
    - name: Create PR with template update
      if: steps.template_check.outputs.template_update == 'true'
      uses: repo-sync/pull-request@v2
      with:
        source_branch: ${{ steps.template_update.outputs.merge_branch }}
        destination_branch: ${{ steps.template_update.outputs.base_branch }}
        pr_title: Update project template using Flexlate
        pr_body: |
          Update template using Flexlate.

          Before merging, review the changes and adjust manually if necessary.

          - Updates coming from [copier-pypi-sphinx-flexlate][1]

          [1]: https://github.com/nickderobertis/copier-pypi-sphinx-flexlate
        pr_label: "no auto merge,automated pr"
        github_token: ${{ inputs.gh_token }}
